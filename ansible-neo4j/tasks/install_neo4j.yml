---

- name: install neo4j dependencies
  apt: name={{ item }} state=present update_cache=yes force=yes
  with_items:
    - python-urllib3
    - libpython-stdlib

- name: add Neo4j apt key
  apt_key: url=http://debian.neo4j.org/neotechnology.gpg.key state=present

- name: set Neo4j repository
  apt_repository: repo="deb http://debian.neo4j.org/repo {{ neo4j_package_version }}/" state=present update_cache=yes

- name: install neo4j package
  apt: name={{ neo4j_package }} state=present update_cache=yes force=yes

- name: install neo4j plugin - APOC
  get_url:
    url: https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/3.4.0.1/apoc-3.4.0.1-all.jar
    dest: /var/lib/neo4j/plugins/apoc-3.4.0.1-all.jar
    owner: neo4j
    group: adm
    mode: 0644
  notify: restart neo4j

- name: install neo4j plugin - MySQL connector
  get_url:
    url: https://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar
    dest: /var/lib/neo4j/plugins/mysql-connector-java-5.1.34.jar
    owner: neo4j
    group: adm
    mode: 0644
  notify: restart neo4j

- name: configure Neo4j
  template: src=neo4j.conf dest=/etc/neo4j/neo4j.conf owner=neo4j group=adm mode=0644
  notify: restart neo4j

- name: set open fd soft limit
  pam_limits:
    domain: neo4j
    limit_type: soft
    limit_item: nofile
    value: "{{ neo4j_nofile_value }}"
  when: neo4j_update_limits

- name: set open fd hard limit
  pam_limits:
    domain: neo4j
    limit_type: hard
    limit_item: nofile
    value: "{{ neo4j_nofile_value }}"
  when: neo4j_update_limits

- name: ensure Neo4j is enabled and started
  service: name={{ neo4j_service_name }} enabled=yes state=started
  when: neo4j_manage_service
